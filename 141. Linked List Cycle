class Solution {
public:
    bool hasCycle(ListNode *head) {
        unordered_map <ListNode * , bool> map ; 

        ListNode * temp = head ; 
        while(temp!=NULL && temp->next != NULL){
            if(map[temp]){
                return true ;
            }
            map[temp] = true ;
            temp = temp-> next ; 
        }
        return false ; 
    }
};


class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *p=head;
        ListNode *q=head;
        while(p && p->next){
            p=p->next->next;
            q=q->next;
            if(p == q) return 1;
        }
        return 0;
    }
};
