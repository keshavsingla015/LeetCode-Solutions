class MyStack {
    queue<int> q1, q2;
public:
    MyStack() {
        
    }
    
    void push(int x) {
        q1.push(x);
    }
    
    int pop() {
        if(q1.empty()) return -1;
        while(q1.size() != 1) {
            q2.push(q1.front());
            q1.pop();
        }
        int top = q1.front();
        q1.pop();
        while(q2.size()) {
            q1.push(q2.front());
            q2.pop();
        }
        return top;
    }
    
    int top() {
        if (q1.empty()) return -1;
        return q1.back();
    }
    
    bool empty() {
        return q1.empty();
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
=================================================================================================================
#include<bits/stdc++.h>

using namespace std;

class Stack {
  queue < int > q;
  public:
    void Push(int x) {
      int s = q.size();
      q.push(x);
      for (int i = 0; i < s; i++) {

        q.push(q.front());
        q.pop();
      }
    }
  int Pop() {
    int n = q.front();
    q.pop();
    return n;
  }
  int Top() {
    return q.front();
  }
  int Size() {
    return q.size();
  }
};

==============================================================================================================================

class MyStack {
public:
    int size ; 
    int * array ;
    int front ; 
    int rear ;
    MyStack() {
        size = 1001 ; 
        array = new int[size];
        front = 0 ; 
        rear = 0 ; 
    }

    bool empty() {
        if(front == 0 && rear == 0){
            return true ; 
        }
        if(front == rear)return true ; 
        if(front == rear-1)return true;  
        return false ; 
    }    

    void push(int x) {
        if(empty()){
            array[front] = x ; 
            rear++ ; 
        }
        array[rear] = x ; 
        rear++ ; 
    }
    
    int pop() {
        if(empty()){
            return -1  ;
        }
        int ans = array[rear-1] ; 
        rear-- ; 
        return ans ; 
    }
    
    int top() {
        if(empty()){
            return -1  ;
        }
        int ans = array[rear-1] ; 
        return ans ; 
    }
    

};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */

=======================================================================================================
