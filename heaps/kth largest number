=============tle===================
#include <queue> 
vector<int> kthSmallLarge(vector<int> &arr, int n, int k)
{
	// Write your code here.
	priority_queue<int> p ; 

	for(int i = 0 ; i < arr.size() ; i++){
		p.push(arr[i]);
	}
	vector<int> queue ; 
	
	while(p.size() != 0){
		queue.push_back(p.top());
		p.pop() ; 
	}


	vector<int> ans ; 
	ans.push_back(queue[arr.size() - k]);
	ans.push_back(queue[k-1]);

	return ans ; 
}

================


void kth_Largest_And_Smallest_By_AscendingOrder(vector<int>&arr, int k) {

        sort(arr.begin(), arr.end())  ;
        int n = arr.size()  ;
    }

vector<int> kthSmallLarge(vector<int> &arr, int n, int k)
{
	// Write your code here.
	kth_Largest_And_Smallest_By_AscendingOrder(arr);
	vector<int> ans ; 
	ans.push_back(arr[n-k]);
	ans.push_back(arr[k - 1]);
	return ans ; 
}
