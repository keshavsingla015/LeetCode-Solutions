

Problem Statement
You have been given ‘K’ different arrays/lists, which are sorted individually (in ascending order). 
You need to merge all the given arrays/list such that the output array/list should be sorted in ascending order.

Sample Input 2:
1
2
3 
3 5 9 
4 
1 2 3 8   
Sample Output 1:
1 2 3 3 5 8 9 

=======================================================

#include<bits/stdc++.h>
void findMedian(int *arr, int n)
{
    priority_queue<int> mx;
    priority_queue<int, vector<int>, greater<int>> mn;
    
    for(int i=0; i<n; i++){
        if(mx.size() == 0) mx.push(arr[i]);
        else if(arr[i] > mx.top()) mn.push(arr[i]);
        else mx.push(arr[i]);
        
        if(mx.size() - mn.size() == 2)
            mn.push(mx.top()), mx.pop();
        else if(mn.size() - mx.size() == 1)
            mx.push(mn.top()), mn.pop();
        
        if(mx.size() == mn.size())
            cout << (mx.top() + mn.top())/2 << " ";
        else cout << mx.top() << " ";  
    }
}
